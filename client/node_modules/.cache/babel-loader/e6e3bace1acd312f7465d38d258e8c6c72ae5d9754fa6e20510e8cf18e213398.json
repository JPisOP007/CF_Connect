{"ast":null,"code":"import api from'./auth';export const ordersAPI={// Get all orders (for current user)\ngetOrders:async()=>{try{const response=await api.get('/orders');return response.data;}catch(error){var _error$response;throw((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||{message:'Failed to fetch orders'};}},// Get single order\ngetOrder:async id=>{try{const response=await api.get(`/orders/${id}`);return response.data;}catch(error){var _error$response2;throw((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data)||{message:'Failed to fetch order'};}},// Create order (vendors only)\ncreateOrder:async orderData=>{try{const response=await api.post('/orders',orderData);return response.data;}catch(error){var _error$response3;throw((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.data)||{message:'Failed to create order'};}},// Update order status\nupdateOrderStatus:async(id,status)=>{try{const response=await api.put(`/orders/${id}`,{status});return response.data;}catch(error){var _error$response4;throw((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.data)||{message:'Failed to update order status'};}},// Delete order\ndeleteOrder:async id=>{try{const response=await api.delete(`/orders/${id}`);return response.data;}catch(error){var _error$response5;throw((_error$response5=error.response)===null||_error$response5===void 0?void 0:_error$response5.data)||{message:'Failed to delete order'};}},// Get vendor orders\ngetVendorOrders:async function(){let cacheParam=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';try{const response=await api.get(`/orders/vendor${cacheParam}`);return response.data;}catch(error){var _error$response6;throw((_error$response6=error.response)===null||_error$response6===void 0?void 0:_error$response6.data)||{message:'Failed to fetch vendor orders'};}},// Get supplier orders\ngetSupplierOrders:async function(){let cacheParam=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';try{const response=await api.get(`/orders/supplier${cacheParam}`);return response.data;}catch(error){var _error$response7;throw((_error$response7=error.response)===null||_error$response7===void 0?void 0:_error$response7.data)||{message:'Failed to fetch supplier orders'};}},// Get order statistics\ngetOrderStats:async()=>{try{const response=await api.get('/orders/stats');return response.data;}catch(error){var _error$response8;throw((_error$response8=error.response)===null||_error$response8===void 0?void 0:_error$response8.data)||{message:'Failed to fetch order statistics'};}}};","map":{"version":3,"names":["api","ordersAPI","getOrders","response","get","data","error","_error$response","message","getOrder","id","_error$response2","createOrder","orderData","post","_error$response3","updateOrderStatus","status","put","_error$response4","deleteOrder","delete","_error$response5","getVendorOrders","cacheParam","arguments","length","undefined","_error$response6","getSupplierOrders","_error$response7","getOrderStats","_error$response8"],"sources":["C:/Users/sjaya/CF_Connect/client/src/api/orders.js"],"sourcesContent":["import api from './auth';\r\n\r\nexport const ordersAPI = {\r\n  // Get all orders (for current user)\r\n  getOrders: async () => {\r\n    try {\r\n      const response = await api.get('/orders');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to fetch orders' };\r\n    }\r\n  },\r\n\r\n  // Get single order\r\n  getOrder: async (id) => {\r\n    try {\r\n      const response = await api.get(`/orders/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to fetch order' };\r\n    }\r\n  },\r\n\r\n  // Create order (vendors only)\r\n  createOrder: async (orderData) => {\r\n    try {\r\n      const response = await api.post('/orders', orderData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to create order' };\r\n    }\r\n  },\r\n\r\n  // Update order status\r\n  updateOrderStatus: async (id, status) => {\r\n    try {\r\n      const response = await api.put(`/orders/${id}`, { status });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to update order status' };\r\n    }\r\n  },\r\n\r\n  // Delete order\r\n  deleteOrder: async (id) => {\r\n    try {\r\n      const response = await api.delete(`/orders/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to delete order' };\r\n    }\r\n  },\r\n\r\n  // Get vendor orders\r\n  getVendorOrders: async (cacheParam = '') => {\r\n    try {\r\n      const response = await api.get(`/orders/vendor${cacheParam}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to fetch vendor orders' };\r\n    }\r\n  },\r\n\r\n  // Get supplier orders\r\n  getSupplierOrders: async (cacheParam = '') => {\r\n    try {\r\n      const response = await api.get(`/orders/supplier${cacheParam}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to fetch supplier orders' };\r\n    }\r\n  },\r\n\r\n  // Get order statistics\r\n  getOrderStats: async () => {\r\n    try {\r\n      const response = await api.get('/orders/stats');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || { message: 'Failed to fetch order statistics' };\r\n    }\r\n  },\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}